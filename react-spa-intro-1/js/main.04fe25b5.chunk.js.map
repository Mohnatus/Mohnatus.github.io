{"version":3,"sources":["img/screenshots/spa-1.jpg","img/screenshots/spa-2.jpg","img/screenshots/spa-3.jpg","img/screenshots/spa-4.jpg","img/screenshots/spa-5.jpg","img/screenshots/spa-6.jpg","works.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","id","title","screenshot","spa1","description","link","spa2","spa3","spa4","spa5","spa6","App","className","works","map","work","index","href","key","src","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,+PCO5B,GACX,CACIC,GAAI,QACJC,MAAO,SACPC,WAAYC,IACZC,YAAa,4EACbC,KAAM,KAEV,CACIL,GAAI,QACJC,MAAO,SACPC,WAAYI,IACZF,YAAa,4EACbC,KAAM,KAEV,CACIL,GAAI,QACJC,MAAO,SACPC,WAAYK,IACZH,YAAa,4EACbC,KAAM,KAEV,CACIL,GAAI,QACJC,MAAO,SACPC,WAAYM,IACZJ,YAAa,8FACbC,KAAM,KAEV,CACIL,GAAI,QACJC,MAAO,SACPC,WAAYO,IACZL,YAAa,sEACbC,KAAM,KAEV,CACIL,GAAI,QACJC,MAAO,SACPC,WAAYQ,IACZN,YAAa,kFACbC,KAAM,MCWCM,MAtDf,WACI,OACI,yBAAKC,UAAU,OACX,4BAAQA,UAAU,UACd,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gBAAf,mEAIR,0BAAMA,UAAU,QACZ,yBAAKA,UAAU,SACX,yBAAKA,UAAU,cACf,yBAAKA,UAAU,aACX,wBAAIA,UAAU,gBAAd,0IAGA,yBAAKA,UAAU,sBACX,oRAEI,6BAFJ,4GAKA,yQAOZ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aACVC,EAAMC,KAAI,SAACC,EAAMC,GAAP,OACP,uBACIC,KAAMF,EAAKV,KACXO,UAAU,iBACVM,IAAKF,GAEL,yBACIJ,UAAU,6BACVO,IAAKJ,EAAKb,WACVkB,IAAKL,EAAKd,QAEd,yBAAKW,UAAU,yBACVG,EAAKd,gBCpCtBoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.04fe25b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spa-1.e27743b4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spa-2.ca02568c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spa-3.5f695f56.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spa-4.dcdf0c16.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spa-5.1d3867f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spa-6.c17060ab.jpg\";","import spa1 from './img/screenshots/spa-1.jpg';\r\nimport spa2 from './img/screenshots/spa-2.jpg';\r\nimport spa3 from './img/screenshots/spa-3.jpg';\r\nimport spa4 from './img/screenshots/spa-4.jpg';\r\nimport spa5 from './img/screenshots/spa-5.jpg';\r\nimport spa6 from './img/screenshots/spa-6.jpg';\r\n\r\nexport default [\r\n    {\r\n        id: 'spa-1',\r\n        title: 'SPA #1',\r\n        screenshot: spa1,\r\n        description: 'Первый проект',\r\n        link: '#'\r\n    },\r\n    {\r\n        id: 'spa-2',\r\n        title: 'SPA #2',\r\n        screenshot: spa2,\r\n        description: 'Второй проект',\r\n        link: '#'\r\n    },\r\n    {\r\n        id: 'spa-3',\r\n        title: 'SPA #3',\r\n        screenshot: spa3,\r\n        description: 'Третий проект',\r\n        link: '#'\r\n    },\r\n    {\r\n        id: 'spa-4',\r\n        title: 'SPA #4',\r\n        screenshot: spa4,\r\n        description: 'Четвертый проект',\r\n        link: '#'\r\n    },\r\n    {\r\n        id: 'spa-5',\r\n        title: 'SPA #5',\r\n        screenshot: spa5,\r\n        description: 'Пятый проект',\r\n        link: '#'\r\n    },\r\n    {\r\n        id: 'spa-6',\r\n        title: 'SPA #6',\r\n        screenshot: spa6,\r\n        description: 'Шестрой проект',\r\n        link: '#'\r\n    }\r\n];\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport works from './works';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className='app'>\r\n            <header className='header'>\r\n                <div className='container'>\r\n                    <div className='header-brand'>Иван Иванов</div>\r\n                </div>\r\n            </header>\r\n\r\n            <main className='main'>\r\n                <div className='about'>\r\n                    <div className='about__bg'></div>\r\n                    <div className='container'>\r\n                        <h1 className='about__title'>\r\n                            React-разработчик Иван Иванов\r\n                        </h1>\r\n                        <div className='about__description'>\r\n                            <p>\r\n                                Разрабатываю на самом крутом в мире фреймворке\r\n                                <br />\r\n                                самые крутые в мире SPA!\r\n                            </p>\r\n                            <p>\r\n                                С удовольствием и вам что-нибудь разработаю ;)\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='portfolio'>\r\n                    <div className='container'>\r\n                        {works.map((work, index) => (\r\n                            <a\r\n                                href={work.link}\r\n                                className='portfolio-item'\r\n                                key={index}\r\n                            >\r\n                                <img\r\n                                    className='portfolio-item__screenshot'\r\n                                    src={work.screenshot}\r\n                                    alt={work.title}\r\n                                />\r\n                                <div className='portfolio-item__title'>\r\n                                    {work.title}\r\n                                </div>\r\n                            </a>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}